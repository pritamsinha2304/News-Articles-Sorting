[2022-02-11 17:00:05] INFO in main: user#82937: Log Configuration Loaded.
[2022-02-11 17:00:05] INFO in main: user#56352: Environment variables Loaded.
[2022-02-11 17:00:05] INFO in main: user#82937: App instantiated.
[2022-02-11 17:00:05] INFO in main: user#56352: App instantiated.
[2022-02-11 17:00:05] INFO in main: user#56352: App Initialized.
[2022-02-11 17:03:30] WARNING in _internal:  * Debugger is active!
[2022-02-11 17:03:31] INFO in _internal:  * Restarting with stat
[2022-02-11 17:03:34] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 17:04:33] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 17:04:33] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 17:06:45] INFO in main: user#23124: Log Configuration Loaded.
[2022-02-11 17:06:45] INFO in main: user#23124: Environment variables Loaded.
[2022-02-11 17:06:45] INFO in main: user#23124: App instantiated.
[2022-02-11 17:06:45] INFO in main: user#23124: App Initialized.
[2022-02-11 17:08:57] WARNING in _internal:  * Debugger is active!
[2022-02-11 17:08:59] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 17:09:01] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 17:09:01] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 17:11:54] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:11:54] "GET / HTTP/1.1" 200 -
[2022-02-11 17:12:16] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:12:16] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 17:12:16] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:12:16] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 17:12:22] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:12:22] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 17:29:45] INFO in main: user#82937: Single Form Validated Successfully
[2022-02-11 17:29:45] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:29:45] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-11 17:29:48] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:29:48] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-11 17:29:49] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:29:49] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 17:29:50] ERROR in _internal: Error on request:
Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 309, in debug_application
    app_iter = self.app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2091, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2076, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 302, in home
    print(optional)
OSError: [Errno 22] Invalid argument

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 319, in run_wsgi
    execute(self.server.app)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 310, in execute
    for data in application_iter:
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 351, in debug_application
    traceback.log(environ["wsgi.errors"])
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\tbtools.py", line 267, in log
    logfile.write(tb)
OSError: [Errno 22] Invalid argument
[2022-02-11 17:29:50] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:29:50] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 17:29:51] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:29:51] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-11 17:29:51] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:29:51] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 17:29:51] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:29:51] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 17:32:05] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 17:32:05] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 17:32:55] INFO in _internal:  * Restarting with stat
[2022-02-11 17:34:20] INFO in main: user#30674: Log Configuration Loaded.
[2022-02-11 17:34:20] INFO in main: user#60926: Log Configuration Loaded.
[2022-02-11 17:34:20] INFO in main: user#30674: Environment variables Loaded.
[2022-02-11 17:34:20] INFO in main: user#60926: Environment variables Loaded.
[2022-02-11 17:34:20] INFO in main: user#30674: App instantiated.
[2022-02-11 17:34:20] INFO in main: user#60926: App instantiated.
[2022-02-11 17:34:20] INFO in main: user#60926: App Initialized.
[2022-02-11 17:37:08] WARNING in _internal:  * Debugger is active!
[2022-02-11 17:37:13] WARNING in _internal:  * Debugger is active!
[2022-02-11 17:37:15] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 17:37:15] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 17:38:06] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 17:38:06] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 17:38:06] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 17:38:06] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 17:38:55] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:38:55] "GET / HTTP/1.1" 200 -
[2022-02-11 17:38:59] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:38:59] "GET / HTTP/1.1" 200 -
[2022-02-11 17:39:16] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:39:16] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 17:39:16] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:39:16] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 17:39:16] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:39:16] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 17:39:16] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:39:16] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 17:39:24] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:39:24] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 17:39:24] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:39:24] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 17:39:25] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:39:25] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 17:40:17] INFO in main: user#60926: Single Form Validated Successfully
[2022-02-11 17:40:17] INFO in main: user#60926: text data and actual data checked successfully
[2022-02-11 17:40:17] INFO in main: user#60926: Single Form Initialized
[2022-02-11 17:40:17] INFO in main: user#60926: Single Form Processing Started
[2022-02-11 17:40:17] INFO in main: user#60926: Single Form Word Tokenization Started
[2022-02-11 17:40:19] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:40:19] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-11 17:40:19] ERROR in _internal: Error on request:
Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 309, in debug_application
    app_iter = self.app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2091, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2076, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 310, in home
    tokenized_text = single_upload.process()
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 144, in process
    print(texts_list)
OSError: [Errno 22] Invalid argument

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 319, in run_wsgi
    execute(self.server.app)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 310, in execute
    for data in application_iter:
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 351, in debug_application
    traceback.log(environ["wsgi.errors"])
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\tbtools.py", line 267, in log
    logfile.write(tb)
OSError: [Errno 22] Invalid argument
[2022-02-11 17:40:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:40:20] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-11 17:40:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:40:20] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 17:40:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:40:20] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 17:40:21] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:40:21] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-11 17:40:21] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 17:40:21] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 17:49:55] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 17:49:56] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 17:50:49] INFO in _internal:  * Restarting with stat
[2022-02-11 17:52:28] INFO in main: user#7120: Log Configuration Loaded.
[2022-02-11 17:52:28] INFO in main: user#33833: Log Configuration Loaded.
[2022-02-11 17:52:28] INFO in main: user#7120: Environment variables Loaded.
[2022-02-11 17:52:28] INFO in main: user#33833: Environment variables Loaded.
[2022-02-11 17:52:28] INFO in main: user#7120: App instantiated.
[2022-02-11 17:52:28] INFO in main: user#7120: App Initialized.
[2022-02-11 17:52:28] INFO in main: user#33833: App instantiated.
[2022-02-11 17:52:28] INFO in main: user#33833: App Initialized.
[2022-02-11 17:54:46] WARNING in _internal:  * Debugger is active!
[2022-02-11 17:54:48] WARNING in _internal:  * Debugger is active!
[2022-02-11 17:54:49] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 17:54:50] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 17:55:13] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 17:55:13] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 17:55:13] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 17:55:13] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 17:55:21] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 17:55:21] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 17:56:04] INFO in _internal:  * Restarting with stat
[2022-02-11 17:58:07] INFO in main: user#66341: Log Configuration Loaded.
[2022-02-11 17:58:07] INFO in main: user#40748: Log Configuration Loaded.
[2022-02-11 17:58:07] INFO in main: user#40748: Environment variables Loaded.
[2022-02-11 17:58:07] INFO in main: user#66341: Environment variables Loaded.
[2022-02-11 17:58:07] INFO in main: user#40748: App instantiated.
[2022-02-11 17:58:07] INFO in main: user#66341: App instantiated.
[2022-02-11 17:58:07] INFO in main: user#66341: App Initialized.
[2022-02-11 18:00:42] ERROR in main: user#66341: Model File Not Found.
[2022-02-11 18:00:42] ERROR in main: user#40748: Model File Not Found.
[2022-02-11 18:01:18] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:01:19] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:01:30] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:01:30] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:02:44] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:02:44] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:02:44] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:02:44] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:03:38] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:03:38] "GET / HTTP/1.1" 200 -
[2022-02-11 18:03:41] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:03:41] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 18:03:41] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:03:41] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 18:03:41] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:03:41] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 18:03:42] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:03:42] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 18:06:00] INFO in main: user#40748: Single Form Validated Successfully
[2022-02-11 18:06:00] INFO in main: user#40748: text data and actual data checked successfully
[2022-02-11 18:06:00] INFO in main: user#40748: Single Form Initialized
[2022-02-11 18:06:00] INFO in main: user#40748: Single Form Processing Started
[2022-02-11 18:06:00] INFO in main: user#40748: Single Form Word Tokenization Started
[2022-02-11 18:06:00] INFO in main: user#40748: Single Form Predict Started
[2022-02-11 18:06:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:06:01] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-11 18:06:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:06:01] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 18:06:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:06:01] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-11 18:06:01] ERROR in _internal: Error on request:
Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 309, in debug_application
    app_iter = self.app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2091, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2076, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 311, in home
    predictions = single_upload.predict(tokenized_text, s_model)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 154, in predict
    predictions = model.predict(padded_text)
NameError: name 'model' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 319, in run_wsgi
    execute(self.server.app)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 310, in execute
    for data in application_iter:
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 351, in debug_application
    traceback.log(environ["wsgi.errors"])
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\tbtools.py", line 267, in log
    logfile.write(tb)
OSError: [Errno 22] Invalid argument
[2022-02-11 18:06:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:06:01] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 18:06:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:06:01] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 18:06:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:06:02] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-11 18:06:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:06:02] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 18:12:23] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:12:23] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:12:47] INFO in _internal:  * Restarting with stat
[2022-02-11 18:14:26] INFO in main: user#32989: Log Configuration Loaded.
[2022-02-11 18:14:26] INFO in main: user#12921: Environment variables Loaded.
[2022-02-11 18:14:26] INFO in main: user#32989: Environment variables Loaded.
[2022-02-11 18:14:26] INFO in main: user#12921: App instantiated.
[2022-02-11 18:14:26] INFO in main: user#32989: App instantiated.
[2022-02-11 18:14:26] INFO in main: user#12921: App Initialized.
[2022-02-11 18:14:26] INFO in main: user#32989: App Initialized.
[2022-02-11 18:14:26] ERROR in main: user#12921: Model File Not Found.
[2022-02-11 18:14:26] ERROR in main: user#32989: Model File Not Found.
[2022-02-11 18:14:26] INFO in main: Tokenizer File Loaded
[2022-02-11 18:14:26] INFO in main: Label Encoder File Loaded
[2022-02-11 18:14:26] INFO in main: Tokenizer File Loaded
[2022-02-11 18:14:26] INFO in main: Label Encoder File Loaded
[2022-02-11 18:14:26] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:14:26] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:14:26] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:14:26] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:14:27] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:14:27] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:14:27] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:14:27] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:14:30] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:14:30] "GET / HTTP/1.1" 200 -
[2022-02-11 18:14:31] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:14:31] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 18:14:31] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:14:31] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 18:14:32] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:14:32] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 18:15:01] INFO in main: user#12921: Single Form Validated Successfully
[2022-02-11 18:15:01] INFO in main: user#12921: text data and actual data checked successfully
[2022-02-11 18:15:01] INFO in main: user#12921: Single Form Initialized
[2022-02-11 18:15:01] INFO in main: user#12921: Single Form Processing Started
[2022-02-11 18:15:01] INFO in main: user#12921: Single Form Word Tokenization Started
[2022-02-11 18:15:02] INFO in main: user#12921: Single Form Predict Started
[2022-02-11 18:15:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:15:02] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-11 18:15:02] ERROR in _internal: Error on request:
Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 309, in debug_application
    app_iter = self.app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2091, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2076, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 315, in home
    predictions = single_upload.predict(tokenized_text, s_model)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 158, in predict
    predictions = model.predict(padded_text)
NameError: name 'model' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 319, in run_wsgi
    execute(self.server.app)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 310, in execute
    for data in application_iter:
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 351, in debug_application
    traceback.log(environ["wsgi.errors"])
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\tbtools.py", line 267, in log
    logfile.write(tb)
OSError: [Errno 22] Invalid argument
[2022-02-11 18:15:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:15:02] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-11 18:15:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:15:02] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 18:15:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:15:02] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 18:15:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:15:02] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-11 18:15:02] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:15:02] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 18:18:51] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:18:52] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:18:53] INFO in _internal:  * Restarting with stat
[2022-02-11 18:19:03] INFO in main: user#82693: Log Configuration Loaded.
[2022-02-11 18:19:03] INFO in main: user#35316: Log Configuration Loaded.
[2022-02-11 18:19:03] INFO in main: user#82693: Environment variables Loaded.
[2022-02-11 18:19:03] INFO in main: user#35316: Environment variables Loaded.
[2022-02-11 18:19:03] INFO in main: user#82693: App instantiated.
[2022-02-11 18:19:03] INFO in main: user#82693: App Initialized.
[2022-02-11 18:19:03] ERROR in main: user#82693: Model File Not Found.
[2022-02-11 18:19:03] INFO in main: user#35316: App instantiated.
[2022-02-11 18:19:03] INFO in main: user#35316: App Initialized.
[2022-02-11 18:19:03] ERROR in main: user#35316: Model File Not Found.
[2022-02-11 18:19:03] INFO in main: Tokenizer File Loaded
[2022-02-11 18:19:03] INFO in main: Label Encoder File Loaded
[2022-02-11 18:19:03] INFO in main: Tokenizer File Loaded
[2022-02-11 18:19:03] INFO in main: Label Encoder File Loaded
[2022-02-11 18:19:03] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:19:03] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:19:03] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:19:03] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:19:04] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:19:04] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:19:04] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:19:04] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:22:54] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:22:54] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:22:55] INFO in _internal:  * Restarting with stat
[2022-02-11 18:23:04] INFO in main: user#25422: Log Configuration Loaded.
[2022-02-11 18:23:04] INFO in main: user#25422: Environment variables Loaded.
[2022-02-11 18:23:04] INFO in main: user#25422: App instantiated.
[2022-02-11 18:23:04] INFO in main: user#25422: App Initialized.
[2022-02-11 18:23:04] ERROR in main: user#25422: Model File Not Found.
[2022-02-11 18:23:04] INFO in main: Tokenizer File Loaded
[2022-02-11 18:23:04] INFO in main: Label Encoder File Loaded
[2022-02-11 18:23:04] INFO in main: user#77988: Log Configuration Loaded.
[2022-02-11 18:23:04] INFO in main: user#77988: Environment variables Loaded.
[2022-02-11 18:23:04] INFO in main: user#77988: App instantiated.
[2022-02-11 18:23:04] INFO in main: user#77988: App Initialized.
[2022-02-11 18:23:04] ERROR in main: user#77988: Model File Not Found.
[2022-02-11 18:23:04] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:23:04] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:23:04] INFO in main: Tokenizer File Loaded
[2022-02-11 18:23:04] INFO in main: Label Encoder File Loaded
[2022-02-11 18:23:04] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:23:04] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:23:05] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:23:05] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:23:05] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:23:05] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:23:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:20] "GET / HTTP/1.1" 200 -
[2022-02-11 18:23:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:20] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 18:23:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:20] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 18:23:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:20] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 18:23:21] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:21] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 18:23:37] INFO in main: user#25422: Single Form Validated Successfully
[2022-02-11 18:23:37] INFO in main: user#25422: text data and actual data checked successfully
[2022-02-11 18:23:37] INFO in main: user#25422: Single Form Initialized
[2022-02-11 18:23:37] INFO in main: user#25422: Single Form Processing Started
[2022-02-11 18:23:37] INFO in main: user#25422: Single Form Word Tokenization Started
[2022-02-11 18:23:37] INFO in main: user#25422: Single Form Predict Started
[2022-02-11 18:23:37] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:37] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-11 18:23:37] ERROR in _internal: Error on request:
Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 309, in debug_application
    app_iter = self.app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2091, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2076, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 318, in home
    predictions = single_upload.predict(tokenized_text, s_model)
  File "C:\Users\prita\PycharmProjects\newsCategory\main.py", line 161, in predict
    predictions = model.predict(padded_text)
AttributeError: 'NoneType' object has no attribute 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 319, in run_wsgi
    execute(self.server.app)
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\serving.py", line 310, in execute
    for data in application_iter:
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\__init__.py", line 351, in debug_application
    traceback.log(environ["wsgi.errors"])
  File "C:\Users\prita\PycharmProjects\newsCategory\venv\Lib\site-packages\werkzeug\debug\tbtools.py", line 267, in log
    logfile.write(tb)
OSError: [Errno 22] Invalid argument
[2022-02-11 18:23:37] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:37] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-11 18:23:37] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:37] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 18:23:37] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:37] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-11 18:23:38] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:38] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 18:23:38] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:38] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-11 18:23:38] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:23:38] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-11 18:29:35] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:29:35] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:29:36] INFO in _internal:  * Restarting with stat
[2022-02-11 18:34:20] INFO in main: user#91513: Log Configuration Loaded.
[2022-02-11 18:34:20] INFO in main: user#91513: Environment variables Loaded.
[2022-02-11 18:34:20] INFO in main: user#91513: App instantiated.
[2022-02-11 18:34:20] INFO in main: user#91513: App Initialized.
[2022-02-11 18:37:03] INFO in main: user#82153: Log Configuration Loaded.
[2022-02-11 18:37:03] INFO in main: user#82153: Environment variables Loaded.
[2022-02-11 18:37:03] INFO in main: user#82153: App instantiated.
[2022-02-11 18:37:03] INFO in main: user#82153: App Initialized.
[2022-02-11 18:38:18] INFO in main: Model File Loaded
[2022-02-11 18:38:19] INFO in main: Tokenizer File Loaded
[2022-02-11 18:38:19] INFO in main: Label Encoder File Loaded
[2022-02-11 18:38:19] INFO in _internal:  * Restarting with stat
[2022-02-11 18:39:58] INFO in main: user#9672: Log Configuration Loaded.
[2022-02-11 18:39:58] INFO in main: user#9672: Environment variables Loaded.
[2022-02-11 18:39:58] INFO in main: user#9672: App instantiated.
[2022-02-11 18:39:58] INFO in main: user#9672: App Initialized.
[2022-02-11 18:41:06] INFO in main: Model File Loaded
[2022-02-11 18:41:09] INFO in main: Tokenizer File Loaded
[2022-02-11 18:41:09] INFO in main: Label Encoder File Loaded
[2022-02-11 18:41:11] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:41:12] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:41:37] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:41:37] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 18:42:54] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:42:54] "GET / HTTP/1.1" 200 -
[2022-02-11 18:43:04] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:43:04] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 18:43:04] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:43:04] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 18:43:10] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:43:10] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 18:45:03] INFO in main: user#9672: Single Form Validated Successfully
[2022-02-11 18:45:03] INFO in main: user#9672: text data and actual data checked successfully
[2022-02-11 18:45:03] INFO in main: user#9672: Single Form Initialized
[2022-02-11 18:45:03] INFO in main: user#9672: Single Form Processing Started
[2022-02-11 18:45:03] INFO in main: user#9672: Single Form Word Tokenization Started
[2022-02-11 18:45:04] INFO in main: user#9672: Single Form Predict Started
[2022-02-11 18:45:33] INFO in main: user#9672: Single Form Metrics Started
[2022-02-11 18:45:33] INFO in main: user#9672: Single Form Encoded Data Dictionary Sent
[2022-02-11 18:45:33] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:45:33] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-11 18:45:34] INFO in main: user#9672: Received Data Dictionary.
[2022-02-11 18:45:35] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:45:35] "GET /stat_metrics?data_dict=eyJkYXRhIjogWyJpbmRpYSBzIHJlbGlhbmNlIGZhbWlseSBmZXVkIGhlYXRzIHVwIHRoZSBvbmdvaW5nIHB1YmxpYyBzcGF0IGJldHdlZW4gdGhlIHR3byBoZWlycyBvZiBpbmRpYSBzIGJpZ2dlc3QgY29uZ2xvbWVyYXRlICByZWxpYW5jZSBncm91cCAgaGFzIHNwaWxsZWQgb3ZlciB0byB0aGUgYm9hcmQgbWVldGluZyBvZiBhIGxlYWRpbmcgY29tcGFueSB3aXRoaW4gdGhlIGdyb3VwLiAgYW5pbCBhbWJhbmkgIHZpY2UtY2hhaXJtYW4gb2YgaW5kaWEgcGV0cm9jaGVtaWNhbHMgbGltaXRlZCAoaXBjbCkiXSwgInByZWQiOiBbImhlYWx0aHkgbGl2aW5nIl0sICJsYWJlbHMiOiBbImFydHMiLCAiYXJ0cyAmIGN1bHR1cmUiLCAiYnVzaW5lc3MiLCAiY29sbGVnZSIsICJjb21lZHkiLCAiY3JpbWUiLCAiZGl2b3JjZSIsICJlZHVjYXRpb24iLCAiZW50ZXJ0YWlubWVudCIsICJlbnZpcm9ubWVudCIsICJmb29kICYgZHJpbmsiLCAiaGVhbHRoeSBsaXZpbmciLCAiaG9tZSAmIGxpdmluZyIsICJpbXBhY3QiLCAibWVkaWEiLCAibW9uZXkiLCAicGFyZW50aW5nIiwgInBvbGl0aWNzIiwgInJlbGlnaW9uIiwgInNjaWVuY2UiLCAic3BvcnRzIiwgInN0eWxlIiwgInN0eWxlICYgYmVhdXR5IiwgInRlY2giLCAidHJhdmVsIiwgIndlZGRpbmdzIiwgIndlbGxuZXNzIiwgIndvcmxkIG5ld3MiXSwgIm1ldHJpY3MiOiB7ImFjY3VyYWN5IjogMC4wLCAiY2xhc3NpZmljYXRpb25fcmVwb3J0IjogeyJidXNpbmVzcyI6IHsicHJlY2lzaW9uIjogMC4wLCAicmVjYWxsIjogMC4wLCAiZjEtc2NvcmUiOiAwLjAsICJzdXBwb3J0IjogMC4wfSwgImhlYWx0aHkgbGl2aW5nIjogeyJwcmVjaXNpb24iOiAwLjAsICJyZWNhbGwiOiAwLjAsICJmMS1zY29yZSI6IDAuMCwgInN1cHBvcnQiOiAxLjB9LCAibWFjcm8gYXZnIjogeyJwcmVjaXNpb24iOiAwLjAsICJyZWNhbGwiOiAwLjAsICJmMS1zY29yZSI6IDAuMCwgInN1cHBvcnQiOiAxLjB9LCAid2VpZ2h0ZWQgYXZnIjogeyJwcmVjaXNpb24iOiAwLjAsICJyZWNhbGwiOiAwLjAsICJmMS1zY29yZSI6IDAuMCwgInN1cHBvcnQiOiAxLjB9fSwgImNvbmZ1c2lvbl9tYXRyaXgiOiBbWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdXX0sICJhY3R1YWwiOiBbImJ1c2luZXNzIl19 HTTP/1.1" 200 -
[2022-02-11 18:45:37] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:45:37] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 18:45:37] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:45:37] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 18:45:41] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 18:45:41] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 18:50:39] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-11 18:50:53] INFO in _internal:  * Restarting with stat
[2022-02-11 18:52:00] INFO in main: user#21317: Log Configuration Loaded.
[2022-02-11 18:52:00] INFO in main: user#21317: Environment variables Loaded.
[2022-02-11 18:52:00] INFO in main: user#21317: Flask Instantiated.
[2022-02-11 18:52:00] INFO in main: user#21317: App Initialized.
[2022-02-11 18:53:01] INFO in main: Model File Loaded
[2022-02-11 18:53:02] INFO in main: Tokenizer File Loaded
[2022-02-11 18:53:02] INFO in main: Label Encoder File Loaded
[2022-02-11 18:53:02] WARNING in _internal:  * Debugger is active!
[2022-02-11 18:53:04] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-11 18:53:08] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-11 18:53:08] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-11 20:29:19] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:29:19] "GET / HTTP/1.1" 200 -
[2022-02-11 20:29:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:29:28] "GET / HTTP/1.1" 200 -
[2022-02-11 20:29:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:29:28] "GET /static/news.js HTTP/1.1" 200 -
[2022-02-11 20:29:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:29:28] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:29:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:29:28] "GET /static/news.js HTTP/1.1" 200 -
[2022-02-11 20:29:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:29:28] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 20:39:00] INFO in main: user#21317: Demo Form Validated Successfully
[2022-02-11 20:39:04] ERROR in main: user#21317: Database Text value access unsuccessfully
[2022-02-11 20:39:04] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:39:04] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-11 20:39:04] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:39:04] "GET / HTTP/1.1" 200 -
[2022-02-11 20:39:04] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:39:04] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 20:39:04] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:39:04] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:39:05] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:39:05] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 20:42:19] INFO in main: user#21317: Demo Form Validated Successfully
[2022-02-11 20:42:19] INFO in main: user#21317: Accessed Text values from database successfully
[2022-02-11 20:42:20] INFO in main: user#21317: test and labels read successfully from database.
[2022-02-11 20:42:20] INFO in main: user#21317: Multiple Form Initialized
[2022-02-11 20:42:20] INFO in main: user#21317: Multiple Form Process Started
[2022-02-11 20:42:20] INFO in main: user#21317: Multiple Form Word Tokenization Started
[2022-02-11 20:42:23] INFO in main: user#21317: Multiple Form Predict Started
[2022-02-11 20:43:26] INFO in main: user#21317: Multiple Form Metrics Started
[2022-02-11 20:43:26] INFO in main: user#21317: Demo Form Encoded Data Dictionary Sent
[2022-02-11 20:43:26] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:43:26] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-11 20:43:26] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 20:43:26] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:43:26] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-11 20:43:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:43:28] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 20:43:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:43:28] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:43:30] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:43:30] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 20:45:35] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 20:45:35] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:45:35] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-11 20:45:36] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:45:36] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 20:45:36] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:45:36] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:45:37] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:45:37] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 20:46:01] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 20:46:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:01] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-11 20:46:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:01] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 20:46:01] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:01] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:46:03] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:03] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 20:46:29] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 20:46:29] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:29] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-11 20:46:30] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:30] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 20:46:30] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:30] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:46:31] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:46:31] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 20:54:17] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:54:17] "GET / HTTP/1.1" 200 -
[2022-02-11 20:54:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:54:20] "GET / HTTP/1.1" 200 -
[2022-02-11 20:54:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:54:20] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:54:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:54:20] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 20:54:20] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:54:20] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 20:54:56] INFO in main: user#21317: Multiple Form Validated Successfully
[2022-02-11 20:54:56] INFO in main: user#21317: news_test_labels_mod.csv read
[2022-02-11 20:54:56] INFO in main: user#21317: news_test_mod.csv read
[2022-02-11 20:54:56] INFO in main: user#21317: test file and actual label file checked successfully
[2022-02-11 20:54:56] INFO in main: user#21317: Multiple Form Initialized
[2022-02-11 20:54:56] INFO in main: user#21317: Multiple Form Process Started
[2022-02-11 20:54:56] INFO in main: user#21317: Multiple Form Word Tokenization Started
[2022-02-11 20:54:59] INFO in main: user#21317: Multiple Form Predict Started
[2022-02-11 20:55:44] INFO in main: user#21317: Multiple Form Metrics Started
[2022-02-11 20:55:44] INFO in main: user#21317: Multiple Form Encoded Data Dictionary Sent
[2022-02-11 20:55:44] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:55:44] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-11 20:55:44] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 20:55:44] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:55:44] "GET /stat_metrics?data_dict=%3D HTTP/1.1" 200 -
[2022-02-11 20:55:45] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:55:45] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 20:55:45] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:55:45] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 20:55:47] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 20:55:47] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 21:02:09] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 21:02:09] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:09] "GET /stat_metrics?data_dict=%3D HTTP/1.1" 200 -
[2022-02-11 21:02:10] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:10] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 21:02:10] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:10] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 21:02:11] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:11] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 21:02:38] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 21:02:38] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:38] "GET /stat_metrics?data_dict=%3D HTTP/1.1" 200 -
[2022-02-11 21:02:39] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:39] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 21:02:39] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:39] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 21:02:40] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:02:40] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 21:03:40] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 21:03:40] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:03:40] "GET /stat_metrics?data_dict=%3D HTTP/1.1" 200 -
[2022-02-11 21:03:41] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:03:41] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 21:03:41] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:03:41] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 21:03:42] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:03:42] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 21:04:16] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 21:04:17] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:17] "GET /stat_metrics?data_dict=%3D HTTP/1.1" 200 -
[2022-02-11 21:04:17] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:17] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 21:04:17] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:17] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 21:04:18] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:18] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 21:04:36] INFO in main: user#21317: Received Data Dictionary.
[2022-02-11 21:04:36] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:36] "GET /stat_metrics?data_dict=%3D HTTP/1.1" 200 -
[2022-02-11 21:04:36] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:36] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 21:04:36] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:36] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 21:04:38] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 21:04:38] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-11 22:23:28] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 22:23:28] "GET / HTTP/1.1" 200 -
[2022-02-11 22:23:31] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 22:23:31] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 22:45:06] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 22:45:06] "GET / HTTP/1.1" 200 -
[2022-02-11 22:45:06] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 22:45:06] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-11 22:45:06] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 22:45:06] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-11 22:45:07] INFO in _internal: 192.168.0.104 - - [11/Feb/2022 22:45:07] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 18:13:37] INFO in main: user#73719: Log Configuration Loaded.
[2022-02-13 18:13:37] INFO in main: user#73719: Environment variables Loaded.
[2022-02-13 18:13:37] INFO in main: user#73719: Flask Instantiated.
[2022-02-13 18:13:37] INFO in main: user#73719: App Initialized.
[2022-02-13 18:15:05] INFO in main: Model File Loaded
[2022-02-13 18:15:07] INFO in main: Tokenizer File Loaded
[2022-02-13 18:15:08] INFO in main: Label Encoder File Loaded
[2022-02-13 18:15:11] INFO in _internal:  * Restarting with stat
[2022-02-13 18:17:34] INFO in main: user#8437: Log Configuration Loaded.
[2022-02-13 18:17:34] INFO in main: user#8437: Environment variables Loaded.
[2022-02-13 18:17:34] INFO in main: user#8437: Flask Instantiated.
[2022-02-13 18:17:34] INFO in main: user#8437: App Initialized.
[2022-02-13 18:19:07] INFO in main: Model File Loaded
[2022-02-13 18:19:15] INFO in main: Tokenizer File Loaded
[2022-02-13 18:19:16] INFO in main: Label Encoder File Loaded
[2022-02-13 18:19:25] WARNING in _internal:  * Debugger is active!
[2022-02-13 18:19:27] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 18:19:42] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 18:19:42] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 18:20:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:20:52] "GET / HTTP/1.1" 200 -
[2022-02-13 18:20:57] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:20:57] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 18:20:58] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:20:58] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 18:20:58] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:20:58] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 18:21:00] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:21:00] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 18:21:02] ERROR in main: user#8437: Error 404 encountered (Not Found) - 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again..
[2022-02-13 18:21:02] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:21:02] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
[2022-02-13 18:39:04] INFO in main: user#8437: Single Form Validated Successfully
[2022-02-13 18:39:05] ERROR in main: user#8437: News Article length less than 50
[2022-02-13 18:39:05] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:39:05] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 18:39:05] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:39:05] "GET / HTTP/1.1" 200 -
[2022-02-13 18:39:05] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:39:05] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 18:39:05] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:39:05] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 18:39:06] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 18:39:06] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 20:18:46] ERROR in main: user#8437: Error 400 encountered (Bad Request) - 400 Bad Request: The CSRF token has expired..
[2022-02-13 20:18:46] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:18:46] "[31m[1mPOST / HTTP/1.1[0m" 400 -
[2022-02-13 20:18:47] ERROR in main: user#8437: Error 404 encountered (Not Found) - 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again..
[2022-02-13 20:18:47] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:18:47] "[33mGET /static/model.js HTTP/1.1[0m" 404 -
[2022-02-13 20:18:47] ERROR in main: user#8437: Error 404 encountered (Not Found) - 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again..
[2022-02-13 20:18:47] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:18:47] "[33mGET /static/model.css HTTP/1.1[0m" 404 -
[2022-02-13 20:18:47] ERROR in main: user#8437: Error 404 encountered (Not Found) - 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again..
[2022-02-13 20:18:47] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:18:47] "[33mGET /static/model.js HTTP/1.1[0m" 404 -
[2022-02-13 20:18:47] ERROR in main: user#8437: Error 404 encountered (Not Found) - 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again..
[2022-02-13 20:18:47] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:18:47] "[33mGET /static/model.css HTTP/1.1[0m" 404 -
[2022-02-13 20:21:10] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:10] "GET / HTTP/1.1" 200 -
[2022-02-13 20:21:10] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:10] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:21:13] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:13] "GET / HTTP/1.1" 200 -
[2022-02-13 20:21:13] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:13] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 20:21:13] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:13] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:21:13] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:13] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 20:21:29] INFO in main: user#8437: Multiple Form Validated Successfully
[2022-02-13 20:21:31] INFO in main: user#8437: labels.csv read
[2022-02-13 20:21:31] INFO in main: user#8437: test.csv read
[2022-02-13 20:21:31] ERROR in main: user#8437: test.csv and labels.csv doesn't have same no. of rows
[2022-02-13 20:21:31] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:31] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 20:21:31] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:31] "GET / HTTP/1.1" 200 -
[2022-02-13 20:21:32] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:32] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 20:21:32] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:32] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:21:32] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:21:32] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 20:22:00] INFO in main: user#8437: Multiple Form Validated Successfully
[2022-02-13 20:22:00] INFO in main: user#8437: labels.csv read
[2022-02-13 20:22:00] INFO in main: user#8437: test.csv read
[2022-02-13 20:22:00] ERROR in main: user#8437: test.csv and labels.csv doesn't have same no. of rows
[2022-02-13 20:22:00] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:00] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 20:22:00] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:00] "GET / HTTP/1.1" 200 -
[2022-02-13 20:22:00] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:00] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:22:00] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:00] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 20:22:01] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:01] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 20:22:33] INFO in main: user#8437: Multiple Form Validated Successfully
[2022-02-13 20:22:33] INFO in main: user#8437: labels.csv read
[2022-02-13 20:22:33] INFO in main: user#8437: test.csv read
[2022-02-13 20:22:33] ERROR in main: user#8437: labels.csv has more than one column
[2022-02-13 20:22:33] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:33] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 20:22:33] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:33] "GET / HTTP/1.1" 200 -
[2022-02-13 20:22:34] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:34] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:22:34] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:34] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 20:22:34] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:22:34] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 20:23:02] INFO in main: user#8437: Multiple Form Validated Successfully
[2022-02-13 20:23:02] INFO in main: user#8437: labels.csv read
[2022-02-13 20:23:02] INFO in main: user#8437: test.csv read
[2022-02-13 20:23:02] ERROR in main: user#8437: test.csv has more than one column
[2022-02-13 20:23:02] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:02] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 20:23:02] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:02] "GET / HTTP/1.1" 200 -
[2022-02-13 20:23:02] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:02] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 20:23:02] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:02] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:23:02] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:02] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 20:23:22] INFO in main: user#8437: Multiple Form Validated Successfully
[2022-02-13 20:23:22] INFO in main: user#8437: labels.csv read
[2022-02-13 20:23:22] INFO in main: user#8437: test.csv read
[2022-02-13 20:23:22] ERROR in main: user#8437: No 'Category' header found in labels.csv
[2022-02-13 20:23:22] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:22] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 20:23:22] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:22] "GET / HTTP/1.1" 200 -
[2022-02-13 20:23:23] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:23] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:23:23] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:23] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 20:23:23] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:23] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 20:23:49] INFO in main: user#8437: Multiple Form Validated Successfully
[2022-02-13 20:23:56] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:56] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-13 20:23:57] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:57] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-13 20:23:57] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:57] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 20:23:57] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:57] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 20:23:57] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:57] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 20:23:58] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:58] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-13 20:23:58] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:23:58] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 20:43:41] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 20:44:17] INFO in _internal:  * Restarting with stat
[2022-02-13 20:45:39] INFO in main: user#5928: Log Configuration Loaded.
[2022-02-13 20:45:39] INFO in main: user#5928: Environment variables Loaded.
[2022-02-13 20:45:39] INFO in main: user#5928: Flask Instantiated.
[2022-02-13 20:45:39] INFO in main: user#5928: App Initialized.
[2022-02-13 20:46:59] INFO in main: Model File Loaded
[2022-02-13 20:47:00] INFO in main: Tokenizer File Loaded
[2022-02-13 20:47:00] INFO in main: Label Encoder File Loaded
[2022-02-13 20:47:00] WARNING in _internal:  * Debugger is active!
[2022-02-13 20:47:01] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 20:47:08] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 20:47:08] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 20:59:32] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:59:32] "GET / HTTP/1.1" 200 -
[2022-02-13 20:59:33] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:59:33] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 20:59:33] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:59:33] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:59:33] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:59:33] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 20:59:35] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 20:59:35] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 21:00:03] INFO in main: user#5928: Multiple Form Validated Successfully
[2022-02-13 21:00:03] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:00:03] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-13 21:00:03] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:00:03] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 21:00:03] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:00:03] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-13 21:00:04] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:00:04] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 21:00:04] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:00:04] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-13 21:00:04] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:00:04] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 21:15:25] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 21:15:41] INFO in _internal:  * Restarting with stat
[2022-02-13 21:17:03] INFO in main: user#42893: Log Configuration Loaded.
[2022-02-13 21:17:03] INFO in main: user#42893: Environment variables Loaded.
[2022-02-13 21:17:03] INFO in main: user#42893: Flask Instantiated.
[2022-02-13 21:17:03] INFO in main: user#42893: App Initialized.
[2022-02-13 21:17:55] INFO in main: Model File Loaded
[2022-02-13 21:17:56] INFO in main: Tokenizer File Loaded
[2022-02-13 21:17:56] INFO in main: Label Encoder File Loaded
[2022-02-13 21:17:56] WARNING in _internal:  * Debugger is active!
[2022-02-13 21:17:56] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 21:17:59] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 21:17:59] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 21:19:14] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:14] "GET / HTTP/1.1" 200 -
[2022-02-13 21:19:19] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:19] "GET / HTTP/1.1" 200 -
[2022-02-13 21:19:19] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:19] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 21:19:19] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:19] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 21:19:20] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:20] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 21:19:47] INFO in main: user#42893: Multiple Form Validated Successfully
[2022-02-13 21:19:47] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:47] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-13 21:19:48] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:48] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 21:19:48] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:48] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-13 21:19:48] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:48] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 21:19:48] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:48] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 21:19:48] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:48] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-13 21:19:48] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 21:19:48] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 21:29:57] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 21:30:14] INFO in _internal:  * Restarting with stat
[2022-02-13 21:31:34] INFO in main: user#79625: Log Configuration Loaded.
[2022-02-13 21:31:34] INFO in main: user#79625: Environment variables Loaded.
[2022-02-13 21:31:34] INFO in main: user#79625: Flask Instantiated.
[2022-02-13 21:31:34] INFO in main: user#79625: App Initialized.
[2022-02-13 21:32:45] INFO in main: Model File Loaded
[2022-02-13 21:32:54] INFO in main: Tokenizer File Loaded
[2022-02-13 21:32:54] INFO in main: Label Encoder File Loaded
[2022-02-13 21:33:04] WARNING in _internal:  * Debugger is active!
[2022-02-13 21:33:06] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 21:33:24] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 21:33:24] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 21:40:40] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 21:41:24] INFO in _internal:  * Restarting with stat
[2022-02-13 21:42:58] INFO in main: user#5877: Log Configuration Loaded.
[2022-02-13 21:42:58] INFO in main: user#5877: Environment variables Loaded.
[2022-02-13 21:42:58] INFO in main: user#5877: Flask Instantiated.
[2022-02-13 21:42:58] INFO in main: user#5877: App Initialized.
[2022-02-13 21:43:40] INFO in main: Model File Loaded
[2022-02-13 21:43:41] INFO in main: Tokenizer File Loaded
[2022-02-13 21:43:42] INFO in main: Label Encoder File Loaded
[2022-02-13 21:43:42] WARNING in _internal:  * Debugger is active!
[2022-02-13 21:43:42] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 21:43:46] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 21:43:46] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 21:45:17] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 21:45:25] INFO in _internal:  * Restarting with stat
[2022-02-13 21:51:37] INFO in main: user#86589: Log Configuration Loaded.
[2022-02-13 21:51:37] INFO in main: user#86589: Environment variables Loaded.
[2022-02-13 21:51:37] INFO in main: user#86589: Flask Instantiated.
[2022-02-13 21:51:37] INFO in main: user#86589: App Initialized.
[2022-02-13 21:52:35] INFO in main: Model File Loaded
[2022-02-13 21:52:35] INFO in main: Tokenizer File Loaded
[2022-02-13 21:52:35] INFO in main: Label Encoder File Loaded
[2022-02-13 21:52:35] INFO in _internal:  * Restarting with stat
[2022-02-13 21:54:15] INFO in main: user#4886: Log Configuration Loaded.
[2022-02-13 21:54:15] INFO in main: user#4886: Environment variables Loaded.
[2022-02-13 21:54:15] INFO in main: user#4886: Flask Instantiated.
[2022-02-13 21:54:15] INFO in main: user#4886: App Initialized.
[2022-02-13 21:55:14] INFO in main: Model File Loaded
[2022-02-13 21:55:18] INFO in main: Tokenizer File Loaded
[2022-02-13 21:55:18] INFO in main: Label Encoder File Loaded
[2022-02-13 21:55:20] WARNING in _internal:  * Debugger is active!
[2022-02-13 21:55:21] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 21:55:48] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 21:55:48] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 22:06:35] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:06:35] "GET / HTTP/1.1" 200 -
[2022-02-13 22:06:36] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:06:36] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 22:06:36] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:06:36] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 22:06:36] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:06:36] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 22:06:38] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:06:38] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 22:07:52] INFO in main: user#4886: Multiple Form Validated Successfully
[2022-02-13 22:07:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:07:52] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-13 22:07:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:07:52] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-13 22:07:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:07:52] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 22:07:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:07:52] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 22:07:53] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:07:53] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-13 22:07:53] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:07:53] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 22:34:32] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 22:34:40] INFO in _internal:  * Restarting with stat
[2022-02-13 22:36:07] INFO in main: user#98485: Log Configuration Loaded.
[2022-02-13 22:36:07] INFO in main: user#98485: Environment variables Loaded.
[2022-02-13 22:36:07] INFO in main: user#98485: Flask Instantiated.
[2022-02-13 22:36:07] INFO in main: user#98485: App Initialized.
[2022-02-13 22:39:08] INFO in main: Model File Loaded
[2022-02-13 22:39:15] INFO in main: Tokenizer File Loaded
[2022-02-13 22:39:16] INFO in main: Label Encoder File Loaded
[2022-02-13 22:39:27] WARNING in _internal:  * Debugger is active!
[2022-02-13 22:39:27] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 22:39:39] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 22:39:39] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 22:41:37] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:41:37] "GET / HTTP/1.1" 200 -
[2022-02-13 22:41:55] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:41:55] "GET / HTTP/1.1" 200 -
[2022-02-13 22:41:55] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:41:55] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 22:41:55] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:41:55] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 22:41:55] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:41:55] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 22:42:50] INFO in main: user#98485: Multiple Form Validated Successfully
[2022-02-13 22:42:51] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:42:51] "[35m[1mPOST / HTTP/1.1[0m" 500 -
[2022-02-13 22:42:51] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:42:51] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 22:42:51] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:42:51] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2022-02-13 22:42:51] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:42:51] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2022-02-13 22:42:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:42:52] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 22:42:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:42:52] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2022-02-13 22:42:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 22:42:52] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 22:49:59] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 22:50:26] INFO in _internal:  * Restarting with stat
[2022-02-13 23:00:03] INFO in main: user#74561: Log Configuration Loaded.
[2022-02-13 23:00:03] INFO in main: user#74561: Environment variables Loaded.
[2022-02-13 23:00:03] INFO in main: user#74561: Flask Instantiated.
[2022-02-13 23:00:03] INFO in main: user#74561: App Initialized.
[2022-02-13 23:01:18] INFO in main: Model File Loaded
[2022-02-13 23:01:21] INFO in main: Tokenizer File Loaded
[2022-02-13 23:01:22] INFO in main: Label Encoder File Loaded
[2022-02-13 23:01:26] INFO in _internal:  * Restarting with stat
[2022-02-13 23:03:04] INFO in main: user#38277: Log Configuration Loaded.
[2022-02-13 23:03:04] INFO in main: user#38277: Environment variables Loaded.
[2022-02-13 23:03:04] INFO in main: user#38277: Flask Instantiated.
[2022-02-13 23:03:04] INFO in main: user#38277: App Initialized.
[2022-02-13 23:04:25] INFO in main: Model File Loaded
[2022-02-13 23:04:29] INFO in main: Tokenizer File Loaded
[2022-02-13 23:04:29] INFO in main: Label Encoder File Loaded
[2022-02-13 23:04:30] WARNING in _internal:  * Debugger is active!
[2022-02-13 23:04:35] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 23:05:11] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 23:05:11] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 23:16:08] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:16:08] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2022-02-13 23:16:29] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:16:29] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 23:16:29] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:16:29] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 23:16:29] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:16:29] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 23:16:30] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:16:30] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 23:18:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:18:52] "GET / HTTP/1.1" 200 -
[2022-02-13 23:18:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:18:52] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 23:18:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:18:52] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 23:18:52] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:18:52] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 23:19:17] INFO in main: user#38277: Multiple Form Validated Successfully
[2022-02-13 23:19:17] ERROR in main: user#38277: Empty labels file uploaded
[2022-02-13 23:19:17] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:19:17] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 23:19:18] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:19:18] "GET / HTTP/1.1" 200 -
[2022-02-13 23:19:18] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:19:18] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 23:19:18] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:19:18] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 23:19:18] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:19:18] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 23:20:36] INFO in main: user#38277: Multiple Form Validated Successfully
[2022-02-13 23:20:37] INFO in main: user#38277: labels.csv read
[2022-02-13 23:20:37] ERROR in main: user#38277: Empty test file uploaded
[2022-02-13 23:20:37] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:20:37] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 23:20:37] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:20:37] "GET / HTTP/1.1" 200 -
[2022-02-13 23:20:37] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:20:37] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 23:20:37] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:20:37] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 23:20:37] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:20:37] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 23:24:14] INFO in main: user#38277: Multiple Form Validated Successfully
[2022-02-13 23:24:14] ERROR in main: user#38277: Wrong file format in 1.jpg
[2022-02-13 23:24:14] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:24:14] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-13 23:24:14] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:24:14] "GET / HTTP/1.1" 200 -
[2022-02-13 23:24:14] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:24:14] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-13 23:24:15] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:24:15] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-13 23:24:15] INFO in _internal: 192.168.0.104 - - [13/Feb/2022 23:24:15] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-13 23:39:09] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 23:39:41] INFO in _internal:  * Restarting with stat
[2022-02-13 23:41:01] INFO in main: user#27403: Log Configuration Loaded.
[2022-02-13 23:41:01] INFO in main: user#27403: Environment variables Loaded.
[2022-02-13 23:41:01] INFO in main: user#27403: Flask Instantiated.
[2022-02-13 23:41:01] INFO in main: user#27403: App Initialized.
[2022-02-13 23:42:44] INFO in main: Model File Loaded
[2022-02-13 23:42:47] INFO in main: Tokenizer File Loaded
[2022-02-13 23:42:47] INFO in main: Label Encoder File Loaded
[2022-02-13 23:42:48] WARNING in _internal:  * Debugger is active!
[2022-02-13 23:42:50] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 23:43:01] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 23:43:01] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 23:45:42] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 23:46:10] INFO in _internal:  * Restarting with stat
[2022-02-13 23:47:46] INFO in main: user#25773: Log Configuration Loaded.
[2022-02-13 23:47:47] INFO in main: user#25773: Environment variables Loaded.
[2022-02-13 23:47:47] INFO in main: user#25773: Flask Instantiated.
[2022-02-13 23:47:47] INFO in main: user#25773: App Initialized.
[2022-02-13 23:49:05] INFO in main: Model File Loaded
[2022-02-13 23:49:07] INFO in main: Tokenizer File Loaded
[2022-02-13 23:49:07] INFO in main: Label Encoder File Loaded
[2022-02-13 23:49:08] WARNING in _internal:  * Debugger is active!
[2022-02-13 23:49:08] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 23:49:18] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 23:49:18] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-13 23:50:29] INFO in _internal:  * Detected change in 'C:\\Users\\prita\\PycharmProjects\\newsCategory\\main.py', reloading
[2022-02-13 23:50:50] INFO in _internal:  * Restarting with stat
[2022-02-13 23:52:27] INFO in main: user#57732: Log Configuration Loaded.
[2022-02-13 23:52:27] INFO in main: user#57732: Environment variables Loaded.
[2022-02-13 23:52:27] INFO in main: user#57732: Flask Instantiated.
[2022-02-13 23:52:27] INFO in main: user#57732: App Initialized.
[2022-02-13 23:53:03] INFO in main: Model File Loaded
[2022-02-13 23:53:03] INFO in main: Tokenizer File Loaded
[2022-02-13 23:53:03] INFO in main: Label Encoder File Loaded
[2022-02-13 23:53:04] WARNING in _internal:  * Debugger is active!
[2022-02-13 23:53:04] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-13 23:53:05] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-13 23:53:05] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-14 00:05:04] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:05:04] "GET / HTTP/1.1" 200 -
[2022-02-14 00:05:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:05:08] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:05:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:05:08] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:05:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:05:08] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:05:10] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:05:10] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:06:59] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:06:59] "GET / HTTP/1.1" 200 -
[2022-02-14 00:07:00] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:07:00] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:07:00] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:07:00] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:07:00] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:07:00] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:07:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:07:44] "GET / HTTP/1.1" 200 -
[2022-02-14 00:07:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:07:44] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:07:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:07:44] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:07:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:07:44] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:08:35] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:08:35] "GET / HTTP/1.1" 200 -
[2022-02-14 00:08:35] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:08:35] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:08:35] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:08:35] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:08:36] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:08:36] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:09:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:01] "GET / HTTP/1.1" 200 -
[2022-02-14 00:09:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:01] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:09:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:01] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:09:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:02] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:09:15] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:15] "GET / HTTP/1.1" 200 -
[2022-02-14 00:09:15] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:15] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:09:15] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:15] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:09:16] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:16] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:09:25] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:25] "GET / HTTP/1.1" 200 -
[2022-02-14 00:09:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:26] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:09:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:26] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:09:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:09:26] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:19:42] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:19:42] "GET / HTTP/1.1" 200 -
[2022-02-14 00:19:43] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:19:43] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:19:43] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:19:43] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:19:43] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:19:43] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:20:55] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:20:55] "GET / HTTP/1.1" 200 -
[2022-02-14 00:20:55] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:20:55] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:20:56] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:20:56] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:20:56] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:20:56] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:22:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:01] "GET / HTTP/1.1" 200 -
[2022-02-14 00:22:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:01] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:22:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:01] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:22:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:02] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:22:32] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:32] "GET / HTTP/1.1" 200 -
[2022-02-14 00:22:32] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:32] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:22:32] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:32] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:22:32] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:22:32] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:23:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:23:08] "GET / HTTP/1.1" 200 -
[2022-02-14 00:23:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:23:08] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:23:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:23:08] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:23:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:23:08] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:24:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:02] "GET / HTTP/1.1" 200 -
[2022-02-14 00:24:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:02] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:24:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:02] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:24:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:03] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:24:19] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:19] "GET / HTTP/1.1" 200 -
[2022-02-14 00:24:19] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:19] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:24:19] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:19] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:24:20] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:20] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:24:55] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:55] "GET / HTTP/1.1" 200 -
[2022-02-14 00:24:56] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:56] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:24:56] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:56] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:24:56] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:24:56] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:28:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:28:48] "GET / HTTP/1.1" 200 -
[2022-02-14 00:28:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:28:48] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:28:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:28:48] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:28:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:28:48] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:28:49] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:28:49] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:29:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:29:03] "GET / HTTP/1.1" 200 -
[2022-02-14 00:29:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:29:03] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:29:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:29:03] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:29:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:29:03] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:32:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:32:46] "GET / HTTP/1.1" 200 -
[2022-02-14 00:32:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:32:46] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:32:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:32:46] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:32:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:32:46] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:32:47] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:32:47] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:33:14] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:33:14] "GET / HTTP/1.1" 200 -
[2022-02-14 00:33:14] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:33:14] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:33:14] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:33:14] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:33:14] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:33:14] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:36:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:36:27] "GET / HTTP/1.1" 200 -
[2022-02-14 00:36:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:36:27] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:36:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:36:27] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:36:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:36:27] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:36:28] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:36:28] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:37:00] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:00] "GET / HTTP/1.1" 200 -
[2022-02-14 00:37:00] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:00] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:37:00] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:00] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:37:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:01] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:37:30] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:30] "GET / HTTP/1.1" 200 -
[2022-02-14 00:37:30] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:30] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:37:30] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:30] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:37:31] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:37:31] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:41:49] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:41:49] "GET / HTTP/1.1" 200 -
[2022-02-14 00:41:49] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:41:49] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:41:49] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:41:49] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:41:50] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:41:50] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:45:38] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:45:38] "GET / HTTP/1.1" 200 -
[2022-02-14 00:45:38] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:45:38] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:45:38] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:45:38] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:45:38] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:45:38] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:45:38] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:45:38] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:49:06] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:06] "GET / HTTP/1.1" 200 -
[2022-02-14 00:49:06] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:06] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:49:06] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:06] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:49:07] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:07] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:49:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:26] "GET / HTTP/1.1" 200 -
[2022-02-14 00:49:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:26] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:49:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:26] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:49:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:27] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:49:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:48] "GET / HTTP/1.1" 200 -
[2022-02-14 00:49:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:48] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:49:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:48] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:49:48] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:49:48] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:57:04] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:04] "GET / HTTP/1.1" 200 -
[2022-02-14 00:57:04] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:04] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:57:04] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:04] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:57:04] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:04] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:57:05] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:05] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 00:57:41] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:41] "GET / HTTP/1.1" 200 -
[2022-02-14 00:57:42] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:42] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 00:57:42] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:42] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 00:57:42] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 00:57:42] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:00:24] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:00:24] "GET / HTTP/1.1" 200 -
[2022-02-14 01:00:24] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:00:24] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:00:24] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:00:24] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:00:24] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:00:24] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:00:25] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:00:25] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:01:41] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:01:41] "GET / HTTP/1.1" 200 -
[2022-02-14 01:01:41] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:01:41] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:01:41] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:01:41] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:01:41] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:01:41] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:04:23] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:04:23] "GET / HTTP/1.1" 200 -
[2022-02-14 01:04:23] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:04:23] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:04:23] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:04:23] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:04:24] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:04:24] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:05:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:05:46] "GET / HTTP/1.1" 200 -
[2022-02-14 01:05:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:05:46] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:05:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:05:46] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:05:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:05:46] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:06:54] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:06:54] "GET / HTTP/1.1" 200 -
[2022-02-14 01:06:55] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:06:55] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:06:55] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:06:55] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:06:55] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:06:55] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:08:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:08:02] "GET / HTTP/1.1" 200 -
[2022-02-14 01:08:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:08:02] "GET /static/news.css HTTP/1.1" 200 -
[2022-02-14 01:08:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:08:02] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:08:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:08:03] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:09:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:03] "GET / HTTP/1.1" 200 -
[2022-02-14 01:09:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:03] "GET /static/news.css HTTP/1.1" 200 -
[2022-02-14 01:09:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:03] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:09:03] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:03] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:09:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:26] "GET / HTTP/1.1" 200 -
[2022-02-14 01:09:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:27] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:09:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:27] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:09:27] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:09:27] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:10:04] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:04] "GET / HTTP/1.1" 200 -
[2022-02-14 01:10:05] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:05] "GET /static/news.css HTTP/1.1" 200 -
[2022-02-14 01:10:05] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:05] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:10:05] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:05] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:10:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:33] "GET / HTTP/1.1" 200 -
[2022-02-14 01:10:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:33] "GET /static/news.css HTTP/1.1" 200 -
[2022-02-14 01:10:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:33] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:10:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:33] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:10:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:44] "GET / HTTP/1.1" 200 -
[2022-02-14 01:10:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:44] "GET /static/news.css HTTP/1.1" 200 -
[2022-02-14 01:10:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:44] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:10:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:10:44] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:13:04] INFO in main: user#57732: Demo Form Validated Successfully
[2022-02-14 01:13:08] ERROR in main: user#57732: Database Text value access unsuccessfully
[2022-02-14 01:13:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:13:08] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-14 01:13:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:13:08] "GET / HTTP/1.1" 200 -
[2022-02-14 01:13:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:13:08] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:13:08] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:13:08] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:13:09] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:13:09] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:14:41] INFO in main: user#57732: Demo Form Validated Successfully
[2022-02-14 01:14:42] INFO in main: user#57732: Accessed Text values from database successfully
[2022-02-14 01:14:43] INFO in main: user#57732: test and labels read successfully from database.
[2022-02-14 01:14:43] INFO in main: user#57732: Multiple Form Initialized
[2022-02-14 01:14:43] INFO in main: user#57732: Multiple Form Process Started
[2022-02-14 01:14:43] INFO in main: user#57732: Multiple Form Word Tokenization Started
[2022-02-14 01:14:47] INFO in main: user#57732: Multiple Form Predict Started
[2022-02-14 01:15:42] INFO in main: user#57732: Multiple Form Metrics Started
[2022-02-14 01:15:43] INFO in main: user#57732: Demo Form Encoded Data Dictionary Sent
[2022-02-14 01:15:43] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:15:43] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-14 01:15:43] INFO in main: user#57732: Received Data Dictionary.
[2022-02-14 01:15:43] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:15:43] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-14 01:15:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:15:44] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:15:44] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:15:44] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:15:47] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:15:47] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:16:49] INFO in main: user#57732: Received Data Dictionary.
[2022-02-14 01:16:49] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:16:49] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-14 01:16:50] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:16:50] "GET /static/news.css HTTP/1.1" 200 -
[2022-02-14 01:16:50] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:16:50] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:16:51] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:16:51] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 01:17:54] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:17:54] "GET / HTTP/1.1" 200 -
[2022-02-14 01:17:57] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:17:57] "GET / HTTP/1.1" 200 -
[2022-02-14 01:17:57] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:17:57] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 01:17:57] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:17:57] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 01:17:58] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 01:17:58] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 15:12:51] INFO in main: user#88084: Log Configuration Loaded.
[2022-02-14 15:12:51] INFO in main: user#88084: Environment variables Loaded.
[2022-02-14 15:12:51] INFO in main: user#88084: Flask Instantiated.
[2022-02-14 15:12:51] INFO in main: user#88084: App Initialized.
[2022-02-14 15:15:45] INFO in main: Model File Loaded
[2022-02-14 15:15:49] INFO in main: Tokenizer File Loaded
[2022-02-14 15:15:49] INFO in main: Label Encoder File Loaded
[2022-02-14 15:15:55] INFO in _internal:  * Restarting with stat
[2022-02-14 15:17:51] INFO in main: user#38475: Log Configuration Loaded.
[2022-02-14 15:17:51] INFO in main: user#38475: Environment variables Loaded.
[2022-02-14 15:17:51] INFO in main: user#38475: Flask Instantiated.
[2022-02-14 15:17:51] INFO in main: user#38475: App Initialized.
[2022-02-14 15:19:36] INFO in main: Model File Loaded
[2022-02-14 15:19:42] INFO in main: Tokenizer File Loaded
[2022-02-14 15:19:43] INFO in main: Label Encoder File Loaded
[2022-02-14 15:19:49] WARNING in _internal:  * Debugger is active!
[2022-02-14 15:19:51] INFO in _internal:  * Debugger PIN: 141-960-299
[2022-02-14 15:20:06] WARNING in _internal:  * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
[2022-02-14 15:20:07] INFO in _internal:  * Running on http://192.168.0.104:5000/ (Press CTRL+C to quit)
[2022-02-14 15:28:30] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 15:28:30] "GET / HTTP/1.1" 200 -
[2022-02-14 15:28:45] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 15:28:45] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 15:28:45] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 15:28:45] "GET /static/news.js HTTP/1.1" 200 -
[2022-02-14 15:28:47] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 15:28:47] "GET /static/news.js HTTP/1.1" 200 -
[2022-02-14 15:28:51] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 15:28:51] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 15:29:01] ERROR in main: user#38475: Error 404 encountered (Not Found) - 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again..
[2022-02-14 15:29:01] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 15:29:01] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
[2022-02-14 16:16:23] INFO in main: user#38475: Demo Form Validated Successfully
[2022-02-14 16:16:34] INFO in main: user#38475: Accessed Text values from database successfully
[2022-02-14 16:16:41] INFO in main: user#38475: test and labels read successfully from database.
[2022-02-14 16:16:41] INFO in main: user#38475: Multiple Form Initialized
[2022-02-14 16:16:41] INFO in main: user#38475: Multiple Form Process Started
[2022-02-14 16:16:41] INFO in main: user#38475: Multiple Form Word Tokenization Started
[2022-02-14 16:16:47] INFO in main: user#38475: Multiple Form Predict Started
[2022-02-14 16:19:21] INFO in main: user#38475: Multiple Form Metrics Started
[2022-02-14 16:19:26] INFO in main: user#38475: Demo Form Encoded Data Dictionary Sent
[2022-02-14 16:19:26] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 16:19:26] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-14 16:19:27] INFO in main: user#38475: Received Data Dictionary.
[2022-02-14 16:19:30] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 16:19:30] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-14 16:19:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 16:19:33] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 16:19:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 16:19:33] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 16:19:36] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 16:19:36] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 16:35:23] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 16:35:23] "GET / HTTP/1.1" 200 -
[2022-02-14 16:35:24] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 16:35:24] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 17:10:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:33] "GET / HTTP/1.1" 200 -
[2022-02-14 17:10:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:33] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 17:10:33] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:33] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 17:10:34] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:34] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 17:10:40] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:40] "GET / HTTP/1.1" 200 -
[2022-02-14 17:10:40] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:40] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 17:10:40] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:40] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 17:10:40] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:10:40] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 17:10:48] INFO in main: user#38475: Demo Form Validated Successfully
[2022-02-14 17:10:49] INFO in main: user#38475: Accessed Text values from database successfully
[2022-02-14 17:10:51] INFO in main: user#38475: test and labels read successfully from database.
[2022-02-14 17:10:51] INFO in main: user#38475: Multiple Form Initialized
[2022-02-14 17:10:51] INFO in main: user#38475: Multiple Form Process Started
[2022-02-14 17:10:51] INFO in main: user#38475: Multiple Form Word Tokenization Started
[2022-02-14 17:10:54] INFO in main: user#38475: Multiple Form Predict Started
[2022-02-14 17:11:46] INFO in main: user#38475: Multiple Form Metrics Started
[2022-02-14 17:11:46] INFO in main: user#38475: Demo Form Encoded Data Dictionary Sent
[2022-02-14 17:11:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:11:46] "[32mPOST / HTTP/1.1[0m" 302 -
[2022-02-14 17:11:46] INFO in main: user#38475: Received Data Dictionary.
[2022-02-14 17:11:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:11:46] "GET /stat_metrics?data_dict= HTTP/1.1" 200 -
[2022-02-14 17:11:46] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:11:46] "[36mGET /static/news.js HTTP/1.1[0m" 304 -
[2022-02-14 17:11:47] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:11:47] "[36mGET /static/news.css HTTP/1.1[0m" 304 -
[2022-02-14 17:11:49] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:11:49] "[36mGET /static/unsplash.jpg HTTP/1.1[0m" 304 -
[2022-02-14 17:12:02] INFO in _internal: 192.168.0.104 - - [14/Feb/2022 17:12:02] "GET / HTTP/1.1" 200 -
